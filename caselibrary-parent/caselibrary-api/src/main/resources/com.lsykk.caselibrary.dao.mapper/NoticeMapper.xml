<?xml version="1.0" encoding="UTF-8" ?>
<!--MyBatis配置文件-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lsykk.caselibrary.dao.mapper.NoticeMapper">

    <insert id="insertAndGetId" parameterType="com.lsykk.caselibrary.dao.pojo.Notice" useGeneratedKeys="true" keyProperty="id" >
        insert into notice(from_id, to_id, title, content, type, is_read, create_time, case_id)
        values (#{fromId}, #{toId}, #{title}, #{content}, #{type}, #{isRead}, #{createTime}, #{caseId});
    </insert>

    <!-- IPage<Notice> findChatByUserId(Long userId);-->
    <select id="findChatByUserId" parameterType="long" resultType="com.lsykk.caselibrary.dao.pojo.Notice">
        select * from notice
        where to_id=#{userId} or from_id=#{userId}
        and type=3 and status=1
    </select>

    <!-- List<Notice> findUnreadChatByUserIds(Long userId, Long chatUserId);-->
    <select id="findUnreadChatByUserIds" parameterType="long" resultType="com.lsykk.caselibrary.dao.pojo.Notice">
        select * from notice
            where ((to_id=#{userId} and from_id=#{chatUserId})
                    or (to_id=#{chatUserId} and from_id=#{userId}))
                    and type=3 and status=1 and isRead=0
    </select>

    <!-- IPage<Notice> findReadChatByUserIds(Long userId, Long chatUserId);-->
    <select id="findReadChatByUserIds" resultType="com.lsykk.caselibrary.dao.pojo.Notice">
        select * from notice
            where ((to_id=#{userId} and from_id=#{chatUserId})
                or (to_id=#{chatUserId} and from_id=#{userId}))
                and type=3 and status=1 and isRead=1
    </select>

</mapper>